(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{290:function(n,e,a){"use strict";a.r(e);var t=a(14),o=Object(t.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"script"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#script"}},[n._v("#")]),n._v(" Script:")]),n._v(" "),e("h6",{attrs:{id:"slice-a-array-into-n"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slice-a-array-into-n"}},[n._v("#")]),n._v(" Slice a array into N:")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const array = [1,2,3,5,6];\nconst slicedArray = array.slice(0, n); // [1,2,3]\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('const score = function(){\n    return 100;\n}\n\nlet names = [\n    {name:"Hasan",title:"hasan",count:[10,20,30]},\n    {name:"Abdul",title:"hasan",count:[50,80,30]},\n    {name:"Karim",title:"hasan",count:[20,20,90]}\n]\n\nlet surnames = {\n    name:[\'khan\',\'rahman\',\'haque\']\n};\n\n// Sum up all the count:\nconst sumOfFirstIndex = names[0].count.reduce((oldValue,newValue) => oldValue+newValue);\nconsole.log("Sum of first index :",sumOfFirstIndex);\n\nlet totalSum = 0;\nnames.forEach((obj) => {\n  totalSum += obj.count.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n});\nconsole.log("Total sum of count:", totalSum);\n\n// Replace all with their total sum:\nlet modifiedNames = JSON.parse(JSON.stringify(names)); // Create a deep copy of the names array\n\nmodifiedNames.forEach((obj) => {\n  const totalSum = obj.count.reduce((accumulator, currentValue) => accumulator + currentValue, 0);\n  obj.count = totalSum;\n});\n\nconsole.log("Replace all with their total sum:", modifiedNames);\n\n// Type 01:\nconsole.log(names[0].count[0]);\n\n// Type 02:\nnames[0].count.map((data)=>{\n    console.log(data);\n})\n\n// Type 03:\nnames.map((data)=>{\n    console.log("Name :",data.name,"Title :",data.title);\n    console.log("Count of name:")\n    data.count.map((data)=>{\n        console.log(data);\n    })\n})\n\n// Filter out the data with name "Karim":\nconst withoutKarim = names.filter((res)=>{\n    return res.name !== \'Karim\'\n});\n\nconsole.log("Without Karim :");\nconsole.log(withoutKarim);\n\n// Find name "Abdul" and delete it:\n// Hint: Find the index , then use splice\n\nconst indexOfAbdul = names.findIndex((obj)=>{\n   return obj.name === "Abdul";\n});\n\n\nconsole.log("Index of Abdul is:",indexOfAbdul);\nnames.splice(indexOfAbdul,1);\nconsole.log("After deletion:",names);\n\n// Best practice:\nif (indexOfAbdul !== -1) {\n    names.splice(indexOfAbdul, 1);\n}\n\nlet array = [\n    { id: 1, name: \'Hasan\' },\n    { id: 2, name: \'Abdul\' },\n    { id: 3, name: \'Karim\' },\n  ];\n\n  const specificId = 1;\n  let filter = array.filter(item => item.id === specificId);\n  \n  console.log(filter);\n\nexport default score;\n')])])])])}),[],!1,null,null,null);e.default=o.exports}}]);